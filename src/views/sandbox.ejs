<% include ./partials/header %>
    <!-- Collect the nav links, forms, and other content for toggling -->
    <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
      <ul class="nav navbar-nav">
        <li><a href="/">Home</a></li>
        <li><a href="/coding">Coding</a></li>
        <li><a href="/music">Music</a></li>
        <li><a href="/travel">Music</a></li>
        <li class="active"><a href="/sandbox">Sandbox<span class="sr-only">(current)</span></a></li>
      </ul>
    </div><!-- /.navbar-collapse -->
    </div><!-- /.container-fluid -->
    </nav>
    <div id="header">
        <h1 class="heading"><strong>SANDBOX</strong></h1>
    </div>
    <div class="content">
      <div id="container"></div>

      <script src="../js/sketch.js"></script>
      <script>

      // ----------------------------------------
      // Particle
      // ----------------------------------------

      function Particle( x, y, radius ) {
          this.init( x, y, radius );
      }

      Particle.prototype = {

          init: function( x, y, radius ) {

              this.alive = true;

              this.radius = radius || 10;
              this.wander = 0.15;
              this.xtheta = random( TWO_PI );
              this.ytheta = random( TWO_PI );

              this.drag = 5;
              this.color = '#fff';

              this.x = x || 0.0;
              this.y = y || 0.0;

              this.vx = 0.0;
              this.vy = 0.0;
          },

          move: function() {

              this.x += this.vx;
              this.y += this.vy;

              this.vx *= this.drag;

              // this.vy *= this.drag;

              if ( this.x < 600 ) this.xtheta = 1;
              else this.xtheta = -1;
              if ( this.y < 250 ) this.ytheta = 1;
              else this.ytheta = -1;

              // this.theta += random( -5, 0 ) * this.wander;
              //
              this.vx += this.xtheta;
              this.vy += this.ytheta;

              this.radius *= 0.97;
              this.alive = this.radius > 0.5;
          },

          draw: function( ctx ) {

              ctx.beginPath();
              ctx.arc( this.x, this.y, this.radius, 0, TWO_PI );
              ctx.fillStyle = '#000000';
              ctx.fill();
          }
      };

      // ----------------------------------------
      // Example
      // ----------------------------------------

      var MAX_PARTICLES = 1000;
      var COLOURS = [ '#69D2E7', '#A7DBD8', '#E0E4CC', '#F38630', '#FA6900', '#FF4E50', '#F9D423' ];

      var particles = [];
      var pool = [];

      var demo = Sketch.create({
          container: document.getElementById( 'container' )
      });

      demo.setup = function() {

          // Set off some initial particles.
          var i, x, y;

          for ( i = 0; i < 20; i++ ) {
              x = ( demo.width * 0.5 ) + random( -100, 100 );
              y = ( demo.height * 0.5 ) + random( -100, 100 );
              demo.spawn( x, y );
          }
      };

      demo.spawn = function( x, y ) {

          var particle, xtheta, ytheta, force;

          if ( particles.length >= MAX_PARTICLES )
              pool.push( particles.shift() );

          particle = pool.length ? pool.pop() : new Particle();
          particle.init( x, y, random( 5, 40 ) );

          particle.wander = random( 0.5, 2.0 );
          particle.color = random( COLOURS );
          particle.drag = random( 0.9, 0.99 );

          xtheta = random( TWO_PI );
          ytheta = random( TWO_PI );
          force = random( 2, 8 );
          if ( particle.x < 600 ) particle.vx = 1;
          else particle.vx = -1;
          particle.vy = cos( ytheta ) * force;

          particles.push( particle );
      };

      demo.update = function() {

          var i, particle;

          for ( i = particles.length - 1; i >= 0; i-- ) {

              particle = particles[i];

              if ( particle.alive ) particle.move();
              else pool.push( particles.splice( i, 1 )[0] );
          }
      };

      demo.draw = function() {

          // demo.globalCompositeOperation  = 'lighter';

          for ( var i = particles.length - 1; i >= 0; i-- ) {
              particles[i].draw( demo );
          }
      };

      demo.mousemove = function() {

          var particle, xtheta, ytheta, force, touch, max, i, j, n;
          var start_points = [
            [100,50],
            [100,250],
            [100,450],
            [1100,50],
            [1100,250],
            [1100,450]
          ];

          for ( i = 0, n = demo.touches.length; i < n; i++ ) {

              touch = demo.touches[i], max = random( 1, 4 );
              for ( j = 0; j < max; j++ ) {
                  demo.spawn( random(start_points)[0], random(start_points)[1] );
              }

          }
      };

      </script>
    </div>
<% include ./partials/footer %>
