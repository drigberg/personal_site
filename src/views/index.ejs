<% include ./partials/header %>
    <!-- Collect the nav links, forms, and other content for toggling -->
    <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
      <ul class="nav navbar-nav">
        <li class="active"><a href="/">Home<span class="sr-only">(current)</span></a></li>
        <li><a href="/coding">Coding</a></li>
        <li><a href="/music">Music</a></li>
        <li><a href="/travel">Travel</a></li>
      </ul>
    </div><!-- /.navbar-collapse -->
    </div><!-- /.container-fluid -->
    </nav>
    <div id="header">
        <h1 class="heading"><strong>Welcome!</strong></h1>
    </div>
    <!-- <div class="cover-photo" id="cover-left"></div>
    <div class="cover-photo" id="cover-right"></div> -->
    <!-- <div class="content"> -->
      <div id="container"></div>

      <script src="../js/sketch.js"></script>
      <script>

      // ----------------------------------------
      // Particle
      // ----------------------------------------

      function Particle( x, y, radius ) {
          this.init( x, y, radius );
      }

      Particle.prototype = {

          init: function( x, y, radius ) {

              this.alive = true;
              this.x = x || 0;
              this.y = y || 0;
              this.origin = [600, 350];
              this.r_x = (this.x - 600);
              this.r_y = (this.y - 250);
              this.r = sqrt((this.r_x * this.r_x) + (this.r_y * this.r_y));

              this.radius = radius || 2;
              this.wander = 0.15;
              this.xtheta = 0;
              this.ytheta = 0;

              this.drag = 3;
              this.color = '#fff';

              this.vx = 8 / this.r * (this.r_y);
              this.vy = 8 / this.r * (this.r_x);


              // this.vx = (sin((this.x - 600) / (this.y - 250) * TWO_PI )) * 5;
              // this.vy = (cos((this.x - 600) / (this.y - 250) * TWO_PI)) * 5;
              //
              //
              // this.vx = 0;
              // this.vy = 0;
              // this.vx = 1;
              // this.vy = 1;

          },

          move: function() {
              this.r_x = (this.x - this.origin[0]);
              this.r_y = (this.y - this.origin[1]);
              this.r = sqrt((this.r_x * this.r_x) + (this.r_y * this.r_y));

              if (this.r < 30 ) this.r = 30;


              this.xtheta = -(this.r_x / (this.r * this.r)) * 50;
              this.ytheta = -(this.r_y / (this.r * this.r)) * 50;
              this.vx += this.xtheta;
              this.vy += this.ytheta;
              this.x += this.vx;
              this.y += this.vy;

              // this.radius *= 0.97;
              // this.alive = this.radius > 0.5;
              // this.vx *= this.drag;
              //
              // this.vy *= this.drag;

              // if ( this.x < origin[0] ) this.xtheta = 10/(r^2);
              // else this.xtheta = -10/(r^2);
              // if ( this.y < origin[1] ) this.ytheta = 10/(r^2);
              // else this.ytheta = -10/(r^2);
              // this.xtheta = 10/(r^2) * cos(TWO_PI * r_x / r_y);
              // this.ytheta = 10/(r^2) * sin(TWO_PI * r_x / r_y);


              // this.xtheta += random( -1, 1 ) * this.wander;
              // this.ytheta += random( -1, 1 ) * this.wander;
          },

          draw: function( ctx ) {

              ctx.beginPath();
              ctx.arc( this.x, this.y, this.radius, 0, TWO_PI );
              ctx.fillStyle = '#000000';
              ctx.fill();
          }
      };

      // ----------------------------------------
      // Example
      // ----------------------------------------

      var MAX_PARTICLES = 1000;
      var COLOURS = [ '#69D2E7', '#A7DBD8', '#E0E4CC', '#F38630', '#FA6900', '#FF4E50', '#F9D423' ];

      var particles = [];
      var pool = [];

      var demo = Sketch.create({
          container: document.getElementById( 'container' )
      });

      demo.setup = function() {

          // Set off some initial particles.
          var i, x, y;

          for ( i = 0; i < 100; i++ ) {
              // x = ( random(demo.width));
              // y = ( random(demo.height));
              x = random(300,900);
              y = random(100,400);
              demo.spawn( x, y );
          }
      };

      demo.spawn = function( x, y ) {

          var particle, xtheta, ytheta, force;

          if ( particles.length >= MAX_PARTICLES )
              pool.push( particles.shift() );

          particle = pool.length ? pool.pop() : new Particle();
          particle.init( x, y, 2 );

          particle.wander = random( 0.5, 2.0 );
          particle.color = random( COLOURS );
          particle.drag = random( 0.9, 0.99 );

          xtheta = random( TWO_PI );
          ytheta = random( TWO_PI );
          force = random( 2, 8 );
          // if ( particle.x < 600 ) particle.vx = 1;
          // else particle.vx = -1;
          // if ( particle.y < 250 ) particle.vy = 1;
          // else particle.vy = -1;
          particles.push( particle );
      };

      demo.update = function() {

          var i, particle;

          for ( i = particles.length - 1; i >= 0; i-- ) {

              particle = particles[i];

              if ( particle.alive ) particle.move();
              else pool.push( particles.splice( i, 1 )[0] );
          }

          var particle, theta, force, touch, max, i, j, n;

          for ( i = 0, n = demo.touches.length; i < n; i++ ) {
              touch = demo.touches[i];
              // demo.spawn( touch.x, touch.y );
              for ( var k = particles.length - 1; k >= 0; k-- ) {
                  if (sqrt((particles[k].x - touch.x) * (particles[k].x - touch.x) + (particles[k].y - touch.y) * (particles[k].y - touch.y)) < 100) {
                      if (particles[k].radius < 20) {
                          particles[k].radius += 1
                      };
                  } else {
                      if (particles[k].radius > 2) {
                          particles[k].radius -= 1
                      };
                  };
                  // if (touch.x < 600) particles[k].radius -= 1;
              }
          }
      };

      demo.draw = function() {

          // demo.globalCompositeOperation  = 'lighter';

          for ( var i = particles.length - 1; i >= 0; i-- ) {
              particles[i].draw( demo );
          }
      };


      // demo.mousemove = function() {
      //
      //     var particle, theta, force, touch, max, i, j, n;
      //
      //     for ( i = 0, n = demo.touches.length; i < n; i++ ) {
      //         touch = demo.touches[i];
      //         for ( var i = particles.length - 1; i >= 0; i-- ) {
      //             // if (sqrt((particles[i].x - touch.x) * (particles[i].x - touch.x) + (particles[i].y - touch.y) * (particles[i].y - touch.y)) < 30) particles[i].radius -= 1;
      //             if (touch.x < 600) particles[i].radius -= 1;
      //             else particles[i].radius += 1;
      //         }
      //     }
      // };

      // demo.mousemove = function() {
      //
      //     var particle, theta, force, touch, max, i, j, n;
      //
      //     for ( i = 0, n = demo.touches.length; i < n; i++ ) {
      //         touch = demo.touches[i];
      //         // demo.spawn( touch.x, touch.y );
      //         for ( var k = particles.length - 1; k >= 0; k-- ) {
      //             if (sqrt((particles[k].x - touch.x) * (particles[k].x - touch.x) + (particles[k].y - touch.y) * (particles[k].y - touch.y)) < 100) {
      //                 if (particles[k].radius < 20) {
      //                     particles[k].radius += 1
      //                 };
      //             } else {
      //                 if (particles[k].radius > 2) {
      //                     particles[k].radius -= 1
      //                 };
      //             };
      //             // if (touch.x < 600) particles[k].radius -= 1;
      //         }
      //     }
      // };


      // demo.mousemove = function() {
      //
      //     var particle, xtheta, ytheta, force, touch, max, i, j, n;
      //     var start_points = [
      //       [300,250],
      //       [900,250],
      //       [300,100],
      //       [900,400]
      //     ];
      //
      //     for ( i = 0, n = demo.touches.length; i < n; i++ ) {
      //
      //         touch = demo.touches[i], max = random( 1, 4 );
      //         for ( j = 0; j < max; j++ ) {
      //             var spawn_point = random(start_points)
      //             demo.spawn( spawn_point[0], spawn_point[1] );
      //         }
      //
      //     }
      // };

      </script>
    <!-- </div> -->
<% include ./partials/footer %>
